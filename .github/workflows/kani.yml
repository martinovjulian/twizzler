<<<<<<< HEAD
name: Kani Build and Run
=======

name: Kani 
>>>>>>> 73de36adf36e949d259f1388d0743ca73c227ec3

on:
  push:
    branches: [ "alex_kani_2", "main" ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: self-hosted

    steps:
<<<<<<< HEAD
    # Step 1: Cleanup
    - name: Cleanup Workspace
      run: |
        ls -la
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la
    
    # Step 2: Checkout the Repository
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    # Step 3: Install the Stable Toolchain
    - name: Install Rust Stable Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    
    # Step 4: Install Kani dependencies (optional, depending on kani setup)
    - name: Install Kani Dependencies
      run: |
        rustup component add rust-src
        rustup component add llvm-tools-preview
    
    # Step 5: Build Kani
    - name: Build Kani
      run: |
        cd kani
        cargo build-dev

    # Step 6: Run Kani with the appropriate flags
    - name: Run Kani with Cargo
      run: |
        ./kani/scripts/cargo-kani --workspace --exclude monitor -Z stubbing -Z unstable-options --output-into-files

=======
    - name: Cleanup
      run: |
        ls -la 
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la 
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
    - name: Bootstrap Toolchain
      run: cargo bootstrap
    # x86_64 is the default, builds in debug mode
    - name: Build x86_64
      run: cargo build-all
    - name: Test x86_64 Debug
      run: cargo start-qemu --tests --qemu-options=--nographic
    - name: Test x86_64 Release
      run: cargo start-qemu --profile release --tests --qemu-options=--nographic
    # aarch64 is compiled for QEMU virt, builds in debug mode
    - name: Build aarch64
      run: cargo build-all -a aarch64 -m virt  
>>>>>>> 73de36adf36e949d259f1388d0743ca73c227ec3
